[0m[1mdata.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.eks.module.kms.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.eks.module.kms.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.eks.module.kms.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.eks.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.eks.data.aws_iam_policy_document.assume_role_policy[0]: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2764486067][0m
[0m[1mmodule.eks.module.eks_managed_node_group["two"].data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.eks.module.eks_managed_node_group["one"].data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.eks.module.eks_managed_node_group["two"].data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.eks.module.eks_managed_node_group["one"].data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.eks.module.eks_managed_node_group["two"].data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.eks.module.eks_managed_node_group["one"].data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.eks.module.eks_managed_node_group["two"].data.aws_iam_policy_document.assume_role_policy[0]: Reading...[0m[0m
[0m[1mmodule.eks.module.eks_managed_node_group["two"].module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]: Reading...[0m[0m
[0m[1mmodule.eks.module.eks_managed_node_group["one"].data.aws_iam_policy_document.assume_role_policy[0]: Reading...[0m[0m
[0m[1mmodule.eks.module.eks_managed_node_group["one"].module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]: Reading...[0m[0m
[0m[1mmodule.eks.module.eks_managed_node_group["two"].module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]: Read complete after 0s [id=329915227][0m
[0m[1mmodule.eks.module.eks_managed_node_group["one"].module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]: Read complete after 0s [id=329915227][0m
[0m[1mmodule.eks.module.eks_managed_node_group["two"].data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2560088296][0m
[0m[1mmodule.eks.module.eks_managed_node_group["one"].data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2560088296][0m
[0m[1mdata.aws_availability_zones.available: Read complete after 0s [id=us-west-2][0m
[0m[1mmodule.eks.module.eks_managed_node_group["one"].data.aws_caller_identity.current: Read complete after 0s [id=518213595606][0m
[0m[1mmodule.eks.module.eks_managed_node_group["two"].data.aws_caller_identity.current: Read complete after 0s [id=518213595606][0m
[0m[1mmodule.eks.module.kms.data.aws_caller_identity.current: Read complete after 0s [id=518213595606][0m
[0m[1mmodule.eks.data.aws_caller_identity.current: Read complete after 0s [id=518213595606][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
 [36m<=[0m read (data resources)
[0m
Terraform will perform the following actions:

[1m  # aws_security_group.node_group_one[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "node_group_one" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Managed by Terraform"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"10.0.0.0/8",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "node_group_one"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_security_group.node_group_two[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "node_group_two" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Managed by Terraform"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"192.168.0.0/16",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "node_group_two"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # random_string.suffix[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "random_string" "suffix" {
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mlength[0m[0m      = 8
      [32m+[0m [0m[1m[0mlower[0m[0m       = true
      [32m+[0m [0m[1m[0mmin_lower[0m[0m   = 0
      [32m+[0m [0m[1m[0mmin_numeric[0m[0m = 0
      [32m+[0m [0m[1m[0mmin_special[0m[0m = 0
      [32m+[0m [0m[1m[0mmin_upper[0m[0m   = 0
      [32m+[0m [0m[1m[0mnumber[0m[0m      = true
      [32m+[0m [0m[1m[0mresult[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mspecial[0m[0m     = false
      [32m+[0m [0m[1m[0mupper[0m[0m       = true
    }

[1m  # module.eks.data.tls_certificate.this[0][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "tls_certificate" "this" {
      [32m+[0m [0m[1m[0mcertificates[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0murl[0m[0m          = (known after apply)
    }

[1m  # module.eks.aws_cloudwatch_log_group.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m              = "/aws/eks/eric-eks-demo/cluster"
      [32m+[0m [0m[1m[0mretention_in_days[0m[0m = 90
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
    }

[1m  # module.eks.aws_eks_cluster.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eks_cluster" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcertificate_authority[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcreated_at[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0menabled_cluster_log_types[0m[0m = [
          [32m+[0m [0m"api",
          [32m+[0m [0m"audit",
          [32m+[0m [0m"authenticator",
        ]
      [32m+[0m [0m[1m[0mendpoint[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0midentity[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                      = "eric-eks-demo"
      [32m+[0m [0m[1m[0mplatform_version[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mrole_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                   = "1.22"

      [32m+[0m [0mkubernetes_network_config {
          [32m+[0m [0m[1m[0mip_family[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mservice_ipv4_cidr[0m[0m = (known after apply)
        }

      [32m+[0m [0mtimeouts {}

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0mcluster_security_group_id[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mendpoint_private_access[0m[0m   = false
          [32m+[0m [0m[1m[0mendpoint_public_access[0m[0m    = true
          [32m+[0m [0m[1m[0mpublic_access_cidrs[0m[0m       = [
              [32m+[0m [0m"0.0.0.0/0",
            ]
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mvpc_id[0m[0m                    = (known after apply)
        }
    }

[1m  # module.eks.aws_iam_openid_connect_provider.oidc_provider[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_openid_connect_provider" "oidc_provider" {
      [32m+[0m [0m[1m[0marn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mclient_id_list[0m[0m  = [
          [32m+[0m [0m"sts.amazonaws.com",
        ]
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m            = {
          [32m+[0m [0m"Name" = "eric-eks-demo-eks-irsa"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m        = {
          [32m+[0m [0m"Name" = "eric-eks-demo-eks-irsa"
        }
      [32m+[0m [0m[1m[0mthumbprint_list[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0murl[0m[0m             = (known after apply)
    }

[1m  # module.eks.aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "eks.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = "EKSClusterAssumeRole"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = "eric-eks-demo-cluster-"
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = "eric-eks-demo-cluster"
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.eks.aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks.aws_security_group.cluster[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "cluster" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "EKS cluster security group"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "eric-eks-demo-cluster-"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "eric-eks-demo-cluster"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "eric-eks-demo-cluster"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.eks.aws_security_group.node[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "node" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "EKS node shared security group"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "eric-eks-demo-node-"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name"                                = "eric-eks-demo-node"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "owned"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name"                                = "eric-eks-demo-node"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "owned"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.eks.aws_security_group_rule.cluster["egress_nodes_443"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "cluster" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Cluster API to node groups"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks.aws_security_group_rule.cluster["egress_nodes_kubelet"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "cluster" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Cluster API to node kubelets"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 10250
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 10250
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks.aws_security_group_rule.cluster["ingress_nodes_443"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "cluster" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node groups to cluster API"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["egress_cluster_443"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node groups to cluster API"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks.aws_security_group_rule.node["egress_https"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Egress all HTTPS to internet"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks.aws_security_group_rule.node["egress_ntp_tcp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Egress NTP/TCP to internet"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 123
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 123
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks.aws_security_group_rule.node["egress_ntp_udp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Egress NTP/UDP to internet"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 123
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "udp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 123
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks.aws_security_group_rule.node["egress_self_coredns_tcp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node to node CoreDNS"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 53
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 53
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks.aws_security_group_rule.node["egress_self_coredns_udp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node to node CoreDNS"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 53
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "udp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 53
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_cluster_443"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Cluster API to node groups"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Cluster API to node kubelets"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 10250
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 10250
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node to node CoreDNS"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 53
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 53
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Node to node CoreDNS"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 53
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "udp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = true
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 53
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.vpc.aws_eip.nat[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc-us-west-2a"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc-us-west-2a"
        }
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # module.vpc.aws_internet_gateway.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # module.vpc.aws_nat_gateway.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_nat_gateway" "this" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mconnectivity_type[0m[0m    = "public"
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc-us-west-2a"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc-us-west-2a"
        }
    }

[1m  # module.vpc.aws_route.private_nat_gateway[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "private_nat_gateway" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m = "0.0.0.0/0"
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mnat_gateway_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                  = (known after apply)

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "5m"
        }
    }

[1m  # module.vpc.aws_route.public_internet_gateway[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "public_internet_gateway" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m = "0.0.0.0/0"
      [32m+[0m [0m[1m[0mgateway_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                  = (known after apply)

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "5m"
        }
    }

[1m  # module.vpc.aws_route_table.private[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc-private"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc-private"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.public[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc-public"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc-public"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[2][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[2][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-west-2a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.1.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-private-us-west-2a"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb"     = "1"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-private-us-west-2a"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb"     = "1"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-west-2b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.2.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-private-us-west-2b"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb"     = "1"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-private-us-west-2b"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb"     = "1"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[2][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-west-2c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.3.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-private-us-west-2c"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb"     = "1"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-private-us-west-2c"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb"     = "1"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-west-2a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.4.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-public-us-west-2a"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"              = "1"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-public-us-west-2a"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"              = "1"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-west-2b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.5.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-public-us-west-2b"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"              = "1"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-public-us-west-2b"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"              = "1"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[2][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-west-2c"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.6.0/24"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = true
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-public-us-west-2c"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"              = "1"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"                                = "ericEKSdemo-vpc-public-us-west-2c"
          [32m+[0m [0m"kubernetes.io/cluster/eric-eks-demo" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"              = "1"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # module.vpc.aws_vpc.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massign_generated_ipv6_cidr_block[0m[0m     = false
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "10.0.0.0/16"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"Name" = "ericEKSdemo-vpc"
        }
    }

[1m  # module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eks_node_group" "this" {
      [32m+[0m [0m[1m[0mami_type[0m[0m               = "AL2_x86_64"
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcapacity_type[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mcluster_name[0m[0m           = "eric-eks-demo"
      [32m+[0m [0m[1m[0mdisk_size[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_types[0m[0m         = [
          [32m+[0m [0m"t3.small",
        ]
      [32m+[0m [0m[1m[0mnode_group_name[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mnode_group_name_prefix[0m[0m = "node-group-1-"
      [32m+[0m [0m[1m[0mnode_role_arn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mrelease_version[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mresources[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "node-group-1"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "node-group-1"
        }
      [32m+[0m [0m[1m[0mversion[0m[0m                = "1.22"

      [32m+[0m [0mlaunch_template {
          [32m+[0m [0m[1m[0mid[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mversion[0m[0m = (known after apply)
        }

      [32m+[0m [0mscaling_config {
          [32m+[0m [0m[1m[0mdesired_size[0m[0m = 2
          [32m+[0m [0m[1m[0mmax_size[0m[0m     = 3
          [32m+[0m [0m[1m[0mmin_size[0m[0m     = 1
        }

      [32m+[0m [0mtimeouts {}

      [32m+[0m [0mupdate_config {
          [32m+[0m [0m[1m[0mmax_unavailable[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mmax_unavailable_percentage[0m[0m = (known after apply)
        }
    }

[1m  # module.eks.module.eks_managed_node_group["one"].aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = "EKSNodeAssumeRole"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m           = "EKS managed node group IAM role"
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = "node-group-1-eks-node-group-"
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks.module.eks_managed_node_group["one"].aws_launch_template.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_launch_template" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdefault_version[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Custom launch template for node-group-1 EKS managed node group"
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlatest_version[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "one-"
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mupdate_default_version[0m[0m = true
      [32m+[0m [0m[1m[0muser_data[0m[0m              = "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSIvLyIKTUlNRS1WZXJzaW9uOiAxLjANCg0KLS0vLw0KQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdA0KQ29udGVudC1UeXBlOiB0ZXh0L3gtc2hlbGxzY3JpcHQNCk1pbWUtVmVyc2lvbjogMS4wDQoNCmVjaG8gJ2ZvbyBiYXInCg0KLS0vLy0tDQo="
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m = (known after apply)

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = "enabled"
          [32m+[0m [0m[1m[0mhttp_protocol_ipv6[0m[0m          = "disabled"
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = 2
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = "required"
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = "disabled"
        }

      [32m+[0m [0mmonitoring {
          [32m+[0m [0m[1m[0menabled[0m[0m = true
        }

      [32m+[0m [0mtag_specifications {
          [32m+[0m [0m[1m[0mresource_type[0m[0m = "instance"
          [32m+[0m [0m[1m[0mtags[0m[0m          = {
              [32m+[0m [0m"Name" = "node-group-1"
            }
        }
      [32m+[0m [0mtag_specifications {
          [32m+[0m [0m[1m[0mresource_type[0m[0m = "network-interface"
          [32m+[0m [0m[1m[0mtags[0m[0m          = {
              [32m+[0m [0m"Name" = "node-group-1"
            }
        }
      [32m+[0m [0mtag_specifications {
          [32m+[0m [0m[1m[0mresource_type[0m[0m = "volume"
          [32m+[0m [0m[1m[0mtags[0m[0m          = {
              [32m+[0m [0m"Name" = "node-group-1"
            }
        }
    }

[1m  # module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eks_node_group" "this" {
      [32m+[0m [0m[1m[0mami_type[0m[0m               = "AL2_x86_64"
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcapacity_type[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mcluster_name[0m[0m           = "eric-eks-demo"
      [32m+[0m [0m[1m[0mdisk_size[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_types[0m[0m         = [
          [32m+[0m [0m"t3.medium",
        ]
      [32m+[0m [0m[1m[0mnode_group_name[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mnode_group_name_prefix[0m[0m = "node-group-2-"
      [32m+[0m [0m[1m[0mnode_role_arn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mrelease_version[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mresources[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "node-group-2"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "node-group-2"
        }
      [32m+[0m [0m[1m[0mversion[0m[0m                = "1.22"

      [32m+[0m [0mlaunch_template {
          [32m+[0m [0m[1m[0mid[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mversion[0m[0m = (known after apply)
        }

      [32m+[0m [0mscaling_config {
          [32m+[0m [0m[1m[0mdesired_size[0m[0m = 1
          [32m+[0m [0m[1m[0mmax_size[0m[0m     = 2
          [32m+[0m [0m[1m[0mmin_size[0m[0m     = 1
        }

      [32m+[0m [0mtimeouts {}

      [32m+[0m [0mupdate_config {
          [32m+[0m [0m[1m[0mmax_unavailable[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mmax_unavailable_percentage[0m[0m = (known after apply)
        }
    }

[1m  # module.eks.module.eks_managed_node_group["two"].aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = "EKSNodeAssumeRole"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m           = "EKS managed node group IAM role"
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = "node-group-2-eks-node-group-"
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # module.eks.module.eks_managed_node_group["two"].aws_launch_template.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_launch_template" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdefault_version[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Custom launch template for node-group-2 EKS managed node group"
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlatest_version[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "two-"
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mupdate_default_version[0m[0m = true
      [32m+[0m [0m[1m[0muser_data[0m[0m              = "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSIvLyIKTUlNRS1WZXJzaW9uOiAxLjANCg0KLS0vLw0KQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdA0KQ29udGVudC1UeXBlOiB0ZXh0L3gtc2hlbGxzY3JpcHQNCk1pbWUtVmVyc2lvbjogMS4wDQoNCmVjaG8gJ2ZvbyBiYXInCg0KLS0vLy0tDQo="
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m = (known after apply)

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = "enabled"
          [32m+[0m [0m[1m[0mhttp_protocol_ipv6[0m[0m          = "disabled"
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = 2
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = "required"
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = "disabled"
        }

      [32m+[0m [0mmonitoring {
          [32m+[0m [0m[1m[0menabled[0m[0m = true
        }

      [32m+[0m [0mtag_specifications {
          [32m+[0m [0m[1m[0mresource_type[0m[0m = "instance"
          [32m+[0m [0m[1m[0mtags[0m[0m          = {
              [32m+[0m [0m"Name" = "node-group-2"
            }
        }
      [32m+[0m [0mtag_specifications {
          [32m+[0m [0m[1m[0mresource_type[0m[0m = "network-interface"
          [32m+[0m [0m[1m[0mtags[0m[0m          = {
              [32m+[0m [0m"Name" = "node-group-2"
            }
        }
      [32m+[0m [0mtag_specifications {
          [32m+[0m [0m[1m[0mresource_type[0m[0m = "volume"
          [32m+[0m [0m[1m[0mtags[0m[0m          = {
              [32m+[0m [0m"Name" = "node-group-2"
            }
        }
    }

[0m[1mPlan:[0m 56 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mcluster_endpoint[0m[0m          = (known after apply)
  [32m+[0m [0m[1m[0mcluster_id[0m[0m                = (known after apply)
  [32m+[0m [0m[1m[0mcluster_name[0m[0m              = "eric-eks-demo"
  [32m+[0m [0m[1m[0mcluster_security_group_id[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0mregion[0m[0m                    = "us-west-2"
[0m[1m
Do you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m

Interrupt received.
Please wait for Terraform to exit or data loss may occur.
Gracefully shutting down...

